div(id="projects-container", class="parent-container")
  hr
  div(class="tab-menu")
    h1 Recent Projects
    div(class="items proj-container")
      button(class="fas fa-bug tablink projects open",
        onclick="openProj('hpotter', this)")  HPotter
      button(class="fas fa-calculator tablink projects",
        onclick="openProj('algs', this)")  Algs
      button(class="fas fa-code tablink projects",
        onclick="openProj('p11', this)")  P11
      button(class="fas fa-underline tablink projects",
        onclick="openProj('sequence-alignment', this)")  Sequence

      div(id="hpotter", class="content proj-item")
        br
        br
        p
        | HPotter is a simple to run, mid-level honey pot that provides a network
        | with an extra level of security. HPotter utilizes SSH, Telnet, and HTTP
        | to imitate a machine. The machine intentionally contains vulnerabilities,
        | so that it attracts and traps hackers. Whenever HPotter is attacked,
        | it reports the date and time, IP address, latitude and longitude of the IP,
        | network protocol, and any entered bash commands to a SQL database.
        | The database is then queried and analyzed via a dashboard interface,
        | provided by Arcadia Data. Analyzing HPotter attacks allows one to
        | build a security system that covers more bases, increasing security
        | across an entire network.
        br
        p
        | HPotter was a great opportunity for me to learn about long-term group
        | project development. Throughout our six month agile SDLC, I had
        | the chance to operate in a team of five as the Tech Lead, Product Owner,
        | and Scrum Master.
        br
        p Stack: Python, Docker, SQL, Trello, Git, and Arcadia Data
        a(href="https://github.com/drsjb80/HPotter",
          target="blank") Repository
      div(id="algs", class="content proj-item")
        br
        br
        p
        | Algs is a fun, small project that I'm continuing to build. It contains
        | calculators for a selection of different algorithms from my Algorithm
        | Analysis course, along with brief explanations of how each one functions.
        | Some of the algorithms include Karatsuba multiplication, dynamic
        | programming (through the sequence alignment problem), and branch and
        | bound (through the zero-one knapsack problem).
        br
        p
        | I enjoy doing deep-dives on well known algorithms, so I figured I
        | would take that interest and turn it into a side project.
        | Algs is currently under construction, as I need to further design the
        | front-end and finish coding the back-end. After these pieces are finished,
        | I hope to deploy Algs so that everyone can learn more about these
        | algorithms with me!
        br
        p
        | Stack: Node.js, Express.js, Python, CSS3, HTML5, SASS, and Git
        br
        br
        a(href="https://github.com/jonnieblas/Algs",
          target="blank") Repository
      div(id="p11", class="content proj-item")
        br
        br
        p
        | P11 is a Lisp-like programming language that is transcompiled using
        | Java. With P11, one can build simple programs that are recursively
        | broken down into tokens, examined by the parser, and then evaluated.
        | I helped to construct P11 in a group of six, where I took the lead
        | in code design and implementation. The grammar for the language
        | was designed by Dr. Jerry Shultz and my Principles of Programming
        | Languages class.
        br
        p
        | P11 allows users to enter functions through a command REPL (read-eval-print loop),
        | where they can make calls to a series of built-in functions. P11
        | lets users define their own functions that can also be used in the REPL.
        | P11 currently contains more than twenty built-in functions, including
        | basic arithmetic and logic functions.
        br
        p Stack: Java and Git
        a(href="https://github.com/jonnieblas/P11",
          target="blank") Repository
      div(id="sequence-alignment", class="content proj-item")
        br
        br
        p
        | Sequence is a small coding project that looks to solve the sequence
        | alignment problem using dynamic programming.
        | When given two strings, how does one program an
        | algorithm capable of aligning the strings so that they match as
        | closely as possible? The two strings would ideally be the same length,
        | with each character in the first string matching each character in
        | the second.
        br
        p
        | Fortunately, the sequence alignment problem can be solved by building
        | a table full of values that help to align the sequences based on scores
        | for each index.
        br
        p
        | To view a demonstration of how the sequence alignment
        | problem can be solved using dynamic programming, as well as an explanation
        | further breaking down the dynamic algorithm, give the Seqence
        | repository a visit!
        br
        p Stack: Java and Git
        a(href="https://github.com/jonnieblas/sequence-alignment",
          target="blank") Repository
  br
  br
  hr
